{"version":3,"sources":["hooks/useModal.js","hooks/useDialog.js","Status.js","modals/BasicModal.js","modals/ConfirmDialog.js","modals/AdvancedModal.js","App.js","index.js"],"names":["ModalContext","createContext","ModalProvider","props","useState","portals","state","setState","Provider","value","open","id","prev","show","close","map","p","Comp","children","useModal","modalId","context","React","useContext","undefined","Error","hasOwnProperty","isShowing","isEvent","DialogProvider","resolveDialog","resolve","dialog","find","filter","Component","a","name","displayName","dialogId","Math","random","toString","substr","Promise","handleResolve","key","useDialog","hasId","Status","BasicModal","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","ConfirmDialog","title","handleNo","BodyContent","closeAdvancedModal","openBasicModal","openDialog","confirm","console","log","className","AdvanceModal","handleClose","size","App","handleConfirm","AdvancedModal","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bf68d2e.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nconst ModalContext = createContext();\n\nfunction ModalProvider(props) {\n  const [state, setState] = useState({ portals: [] });\n\n  const open = (id) => {\n    setState((prev) => ({ ...prev, [id]: { show: true } }));\n  };\n\n  const close = (id) => {\n    setState((prev) => ({ ...prev, [id]: { show: false } }));\n  };\n\n  return (\n    <ModalContext.Provider value={{ ...state, open, close }}>\n      {state.portals.map((p) => p.Comp)}\n      {props.children}\n    </ModalContext.Provider>\n  );\n}\n\nfunction useModal(modalId) {\n  const context = React.useContext(ModalContext);\n\n  if (context === undefined) {\n    throw new Error(`useModal must be used within a ModalProvider`);\n  }\n\n  return {\n    show: context.hasOwnProperty(modalId) ? context[modalId].show : false,\n    isShowing: (id = modalId) =>\n      context.hasOwnProperty(id) ? context[id].show : false,\n    open: (id = modalId) => {\n      const isEvent = typeof id === \"object\" && id.hasOwnProperty(\"type\");\n      context.open(isEvent ? modalId : id);\n    },\n    close: (id = modalId) => {\n      const isEvent = typeof id === \"object\" && id.hasOwnProperty(\"type\");\n      context.close(isEvent ? modalId : id);\n    },\n    state: context,\n  };\n}\n\nexport { ModalProvider };\nexport default useModal;\n","import React, { createContext, useState } from \"react\";\n\nconst ModalContext = createContext();\n\nfunction DialogProvider(props) {\n  const [state, setState] = useState({ portals: [] });\n\n  const resolveDialog = (id, resolve = null) => {\n    const dialog = state.portals.find((p) => p.id === id);\n\n    return (value) => {\n      setState((prev) => ({\n        ...prev,\n        portals: [...prev.portals.filter((p) => p.id !== id)],\n      }));\n\n      return resolve ? resolve(value) : dialog ? dialog.resolve(value) : null;\n    };\n  };\n\n  const dialog = async (Component, props, id = null) => {\n    const name = Component.displayName || Component.name || \"\";\n    const dialogId = name + (id || Math.random().toString(36).substr(2));\n\n    return new Promise((resolve) => {\n      const handleResolve = resolveDialog(dialogId, resolve);\n\n      setState((prev) => ({\n        ...prev,\n        portals: [\n          {\n            id: dialogId,\n            Comp: (\n              <Component\n                key={dialogId}\n                resolve={handleResolve}\n                dialogId={dialogId}\n                props={props}\n              />\n            ),\n            resolve,\n          },\n        ],\n      }));\n    });\n  };\n\n  return (\n    <ModalContext.Provider value={{ ...state, dialog, resolveDialog }}>\n      {state.portals.map((p) => p.Comp)}\n      {props.children}\n    </ModalContext.Provider>\n  );\n}\n\nfunction useDialog(dialogId) {\n  const context = React.useContext(ModalContext);\n\n  if (context === undefined) {\n    throw new Error(`useDialog must be used within a DialogProvider`);\n  }\n\n  return {\n    dialog: context.dialog,\n    resolve: (value, id = dialogId) => {\n      const isEvent = typeof id === \"object\" && id.hasOwnProperty(\"type\");\n      const hasId = isEvent ? dialogId : id;\n      if (!hasId)\n        throw new Error(\n          `useDialog must have a value if you want to use the resolve method`\n        );\n\n      return context.resolveDialog(isEvent ? dialogId : id)(value);\n    },\n    state: context,\n  };\n}\n\nexport { DialogProvider };\nexport default useDialog;\n","import React from \"react\";\nimport useModal from \"./hooks/useModal\";\n\nconst Status = () => {\n  const { isShowing } = useModal();\n\n  return (\n    <div>\n      {isShowing(\"the-basic-modal\")\n        ? \"showing the-basic-modal\"\n        : \"not showing the-basic-modal\"}\n      <br />\n      {isShowing(\"the-advanced-modal\")\n        ? \"showing the-advanced-modal\"\n        : \"not showing the-advanced-modal\"}\n      <hr />\n    </div>\n  );\n};\n\nexport default Status;\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport useModal from \"../hooks/useModal\";\n\nconst BasicModal = ({ modalId }) => {\n  const { show, close } = useModal(modalId);\n\n  return (\n    <Modal show={show} onHide={close}>\n      <Modal.Header closeButton>\n        <Modal.Title>Simple Modal</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>Woohoo, you're reading this text in a modal!</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={close}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default BasicModal;\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nconst ConfirmDialog = ({ resolve, dialogId, props }) => {\n  const { title } = props;\n\n  const handleNo = () => {\n    resolve(false);\n  };\n\n  const handleYes = () => {\n    resolve(true);\n  };\n\n  return (\n    <Modal show={true} onHide={handleNo}>\n      <Modal.Header closeButton>\n        <Modal.Title>{title || \"Modal title\"}</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <p>\n          Modal body text goes here. <br />\n          DialogId = {dialogId}\n        </p>\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button variant=\"danger\" onClick={handleNo}>\n          No\n        </Button>\n        <Button variant=\"primary\" onClick={handleYes}>\n          Yes\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nConfirmDialog.displayName = \"MyConfirmDialogName\";\n\nexport default ConfirmDialog;\n\n// If you want use Portal, you can...\n// import ReactDOM from \"react-dom\";\n// export default (props) =>\n//   ReactDOM.createPortal(\n//     <ConfirmDialog {...props} />,\n//     document.getElementById(\"portal\")\n//   );\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport ConfirmDialog from \"../modals/ConfirmDialog\";\nimport useModal from \"../hooks/useModal\";\nimport useDialog from \"../hooks/useDialog\";\n\nconst BodyContent = () => {\n  const { close: closeAdvancedModal } = useModal(\"the-advanced-modal\");\n  const { open: openBasicModal } = useModal(\"the-basic-modal\");\n  const { dialog } = useDialog();\n\n  const openDialog = async () => {\n    const confirm = await dialog(ConfirmDialog, {\n      title: \"Do you want close the advanced modal?\",\n    });\n    console.log(\"[modal][confirmed]\", confirm);\n\n    if (confirm) closeAdvancedModal();\n  };\n\n  return (\n    <div>\n      <p>This is the content of the modal.</p>\n      <p>Woohoo, you're reading this text in a modal!</p>\n      <Button className=\"mr-3\" onClick={closeAdvancedModal}>\n        Close this modal\n      </Button>\n      <Button className=\"mr-3\" onClick={openBasicModal}>\n        Open BasicModal\n      </Button>\n      <Button onClick={openDialog}>Open ConfirmDialog</Button>\n    </div>\n  );\n};\n\nconst AdvanceModal = () => {\n  const { show, close } = useModal(\"the-advanced-modal\");\n\n  const handleClose = () => {\n    close();\n  };\n\n  return (\n    <Modal show={show} onHide={handleClose} size=\"lg\">\n      <Modal.Header closeButton>\n        <Modal.Title>Modal heading</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>Woohoo, you're reading this text in a modal!</p>\n        <BodyContent />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={handleClose}>\n          Save Changes\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default AdvanceModal;\n","import React from \"react\";\nimport useModal from \"./hooks/useModal\";\nimport useDialog from \"./hooks/useDialog\";\nimport Status from \"./Status\";\nimport BasicModal from \"./modals/BasicModal\";\nimport AdvancedModal from \"./modals/AdvancedModal\";\nimport ConfirmDialog from \"./modals/ConfirmDialog\";\n\nconst App = () => {\n  const { open } = useModal();\n  const { dialog } = useDialog();\n\n  const handleConfirm = async () => {\n    const confirm = await dialog(ConfirmDialog, {\n      title: \"Do you want close without save?\",\n    });\n    console.log(\"[app][confirmed]\", confirm);\n  };\n\n  return (\n    <div>\n      <Status />\n\n      <button onClick={() => open(\"the-basic-modal\")} className=\"mr-3\">\n        Open Basic\n      </button>\n      <button onClick={() => open(\"the-advanced-modal\")} className=\"mr-3\">\n        Open Advanced\n      </button>\n      <button onClick={handleConfirm}>Open ConfirmDialog</button>\n\n      {/* ADD THE MODALS HERE */}\n      <BasicModal modalId=\"the-basic-modal\" />\n      <AdvancedModal />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ModalProvider } from \"./hooks/useModal\";\nimport { DialogProvider } from \"./hooks/useDialog\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <DialogProvider>\n    <ModalProvider>\n      <App />\n    </ModalProvider>\n  </DialogProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}